<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        0KFCrUUEbm2QsPL1nNx5THE+gPIfhf/Z
</value>
  </data>
</root>